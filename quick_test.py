#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç AIbox –∞–≥–µ–Ω—Ç–∞
"""

import asyncio
import time
from autonomous_agent import AutonomousAgent

async def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∞–≥–µ–Ω—Ç–∞"""
    
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç AIbox –∞–≥–µ–Ω—Ç–∞")
    print("=" * 40)
    
    try:
        # –°–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞
        print("üìã –°–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞...")
        agent = AutonomousAgent("Quick Test Agent", "test_data")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π...")
        agent.initialize_modules()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–∞
        print("üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–∞...")
        agent.initialize_agent()
        
        print("‚úÖ –ê–≥–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")
        
        # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
        status = agent.get_status_report()
        print(f"üìä –°—Ç–∞—Ç—É—Å: {status.get('consciousness_cycles', 0)} —Ü–∏–∫–ª–æ–≤ —Å–æ–∑–Ω–∞–Ω–∏—è")
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞...")
        test_question = "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"
        
        start_time = time.time()
        response = await agent.process_input(test_question)
        response_time = time.time() - start_time
        
        print(f"‚ùì –í–æ–ø—Ä–æ—Å: {test_question}")
        print(f"ü§ñ –û—Ç–≤–µ—Ç ({response_time:.2f}—Å): {response}")
        
        # –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        final_status = agent.get_status_report()
        print(f"\nüìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {final_status.get('consciousness_cycles', 0)} —Ü–∏–∫–ª–æ–≤ —Å–æ–∑–Ω–∞–Ω–∏—è")
        
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(quick_test()) 