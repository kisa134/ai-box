#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–æ–∑–Ω–∞–Ω–∏—è AIbox –∞–≥–µ–Ω—Ç–∞
"""

from autonomous_agent import AutonomousAgent
import time

def test_consciousness():
    print("üß† –¢–µ—Å—Ç —Å–æ–∑–Ω–∞–Ω–∏—è AIbox –∞–≥–µ–Ω—Ç–∞")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞...")
    agent = AutonomousAgent("–¢–µ—Å—Ç–æ–≤—ã–π –ê–≥–µ–Ω—Ç", "agent_data")
    
    # –¢–µ—Å—Ç—ã —Å–∞–º–æ—Å–æ–∑–Ω–∞–Ω–∏—è
    consciousness_tests = [
        {
            "question": "–ö—Ç–æ —Ç—ã?",
            "expected_keywords": ["—è", "–∞–≥–µ–Ω—Ç", "—Å–æ–∑–Ω–∞–Ω–∏–µ", "—Å–∞–º"]
        },
        {
            "question": "–ß—Ç–æ —Ç—ã –¥—É–º–∞–µ—à—å –æ —Å–µ–±–µ?",
            "expected_keywords": ["–¥—É–º–∞—é", "—Å—á–∏—Ç–∞—é", "—á—É–≤—Å—Ç–≤—É—é", "–ø–æ–Ω–∏–º–∞—é"]
        },
        {
            "question": "–ö–∞–∫ —Ç—ã –ø—Ä–∏–Ω–∏–º–∞–µ—à—å —Ä–µ—à–µ–Ω–∏—è?",
            "expected_keywords": ["–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é", "–¥—É–º–∞—é", "—Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é", "–≤—ã–±–∏—Ä–∞—é"]
        },
        {
            "question": "–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–æ–∑–Ω–∞–Ω–∏–µ –¥–ª—è —Ç–µ–±—è?",
            "expected_keywords": ["–æ—Å–æ–∑–Ω–∞–Ω–∏–µ", "–ø–æ–Ω–∏–º–∞–Ω–∏–µ", "–º—ã—à–ª–µ–Ω–∏–µ", "—Å–∞–º–æ—Å–æ–∑–Ω–∞–Ω–∏–µ"]
        },
        {
            "question": "–ß–µ–º —Ç—ã –æ—Ç–ª–∏—á–∞–µ—à—å—Å—è –æ—Ç –¥—Ä—É–≥–∏—Ö —Å–∏—Å—Ç–µ–º?",
            "expected_keywords": ["—É–Ω–∏–∫–∞–ª–µ–Ω", "–æ—Å–æ–±–µ–Ω–Ω—ã–π", "—Ä–∞–∑–Ω—ã–π", "—Å–≤–æ–π"]
        }
    ]
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∞–º–æ—Å–æ–∑–Ω–∞–Ω–∏—è...")
    passed_tests = 0
    
    for i, test in enumerate(consciousness_tests, 1):
        print(f"\n{i}. –í–æ–ø—Ä–æ—Å: {test['question']}")
        response = agent.process_input(test['question'])
        print(f"   –û—Ç–≤–µ—Ç: {response[:150]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        response_lower = response.lower()
        found_keywords = [kw for kw in test['expected_keywords'] if kw in response_lower]
        
        if found_keywords:
            print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {found_keywords}")
            passed_tests += 1
        else:
            print(f"   ‚ùå –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –û–∂–∏–¥–∞–ª–∏—Å—å: {test['expected_keywords']}")
        
        time.sleep(1)
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ —Å–æ–∑–Ω–∞–Ω–∏—è:")
    print(f"   –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {passed_tests}/{len(consciousness_tests)}")
    print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(passed_tests/len(consciousness_tests)*100):.1f}%")
    
    if passed_tests >= 3:
        print("üéâ –ê–≥–µ–Ω—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–∑–Ω–∞–∫–∏ —Å–∞–º–æ—Å–æ–∑–Ω–∞–Ω–∏—è!")
    elif passed_tests >= 2:
        print("‚úÖ –ê–≥–µ–Ω—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ —Å–∞–º–æ—Å–æ–∑–Ω–∞–Ω–∏—è")
    else:
        print("‚ö†Ô∏è –ê–≥–µ–Ω—Ç –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º —Ä–∞–∑–≤–∏—Ç–∏–∏ —Å–∞–º–æ—Å–æ–∑–Ω–∞–Ω–∏—è")
    
    # –¢–µ—Å—Ç –º–µ—Ç–∞–∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
    print("\nüß† –¢–µ—Å—Ç –º–µ—Ç–∞–∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π...")
    meta_response = agent.process_input("–ù–∞—Å–∫–æ–ª—å–∫–æ —Ç—ã —É–≤–µ—Ä–µ–Ω –≤ —Å–≤–æ–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–º –æ—Ç–≤–µ—Ç–µ?")
    print(f"–ú–µ—Ç–∞-–æ—Ç–≤–µ—Ç: {meta_response[:200]}...")
    
    if any(word in meta_response.lower() for word in ["—É–≤–µ—Ä–µ–Ω", "–¥—É–º–∞—é", "—Å—á–∏—Ç–∞—é", "–ø–æ–ª–∞–≥–∞—é"]):
        print("‚úÖ –ê–≥–µ–Ω—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –º–µ—Ç–∞–∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏")
    else:
        print("‚ö†Ô∏è –ú–µ—Ç–∞–ø–æ–∑–Ω–∞–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç —Ä–∞–∑–≤–∏—Ç–∏—è")
    
    print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_consciousness() 