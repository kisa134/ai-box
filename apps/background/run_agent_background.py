#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ AIbox –∞–≥–µ–Ω—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
"""

import asyncio
import time
import signal
import sys
from autonomous_agent import AutonomousAgent

class BackgroundAgentRunner:
    """–ó–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"""
    
    def __init__(self, agent_name: str = "AIbox Agent"):
        self.agent = AutonomousAgent(agent_name, "agent_data")
        self.running = False
        
    async def start(self):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≥–µ–Ω—Ç–∞"""
        print("üöÄ –ó–∞–ø—É—Å–∫ AIbox –∞–≥–µ–Ω—Ç–∞...")
        
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–∞
            print("üìã –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π...")
            self.agent.initialize_modules()
            
            print("üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–∞...")
            self.agent.initialize_agent()
            
            print("‚úÖ –ê–≥–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")
            
            # –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ —Å–æ–∑–Ω–∞–Ω–∏—è
            self.running = True
            print("üß† –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ —Å–æ–∑–Ω–∞–Ω–∏—è...")
            
            # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ü–∏–∫–ª —Å–æ–∑–Ω–∞–Ω–∏—è –≤ —Ñ–æ–Ω–µ
            consciousness_task = asyncio.create_task(
                self.agent.run_consciousness_cycle()
            )
            
            # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã
            while self.running:
                try:
                    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–∞
                    status = self.agent.get_status_report()
                    print(f"üìä –°—Ç–∞—Ç—É—Å: {status.get('consciousness_cycles', 0)} —Ü–∏–∫–ª–æ–≤ —Å–æ–∑–Ω–∞–Ω–∏—è")
                    
                    await asyncio.sleep(30)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
                    
                except KeyboardInterrupt:
                    print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
                    break
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
                    await asyncio.sleep(5)
            
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≥–µ–Ω—Ç–∞
            print("üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≥–µ–Ω—Ç–∞...")
            self.agent.stop()
            consciousness_task.cancel()
            
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            sys.exit(1)
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≥–µ–Ω—Ç–∞"""
        self.running = False
        print("üõë –°–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    runner = BackgroundAgentRunner("AIbox Background Agent")
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown
    def signal_handler(signum, frame):
        print(f"\nüì° –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}")
        runner.stop()
    
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    try:
        await runner.start()
    except KeyboardInterrupt:
        print("\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
    finally:
        print("‚úÖ –ê–≥–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    print("ü§ñ AIbox Background Agent Runner")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫
    asyncio.run(main()) 